#!/usr/bin/env node

let fs = require('q-io/fs');
let path = require('path');
let Q = require('q');
Q.longStackSupport = true;
let bower = require('bower');

let generateElementProperties = require('../browser/generate-property');
let installElements = require('../browser/install-elements');
let getElementIds = require('../browser/get-element-ids');
let vulcanCrisp = require('../browser/vulcan-crisp');
let build = require('../browser/build');
let cfg = require('../browser/config');
let baseDir = path.dirname(__dirname);
baseDir = path.join(baseDir, 'browser');

let removeBowerComponents = Q.async(function* () {
  let name = path.basename.bind(path), dir = path.dirname.bind(path);
  let resolve = path.resolve.bind(path), join = path.join.bind(path);
  let rel = p => `_site/${p}`;
  let pAll = (arr, fn) => Promise.all(arr.map(fn));

  let excludes = [
    'webcomponentsjs/webcomponents-lite.js'
  ];

  excludes = excludes.map(e => resolve(rel(`bower_components/${e}`)));

  yield pAll(excludes, e => fs.copy(e, rel(name(e))));
  yield fs.removeTree(rel('bower_components'));
  yield pAll(excludes, e => fs.makeTree(dir(e)));
  yield pAll(excludes, e => fs.move(rel(name(e)), join(dir(e), name(e))));
});

Q.spawn(function* () {
  let exists = yield fs.exists('_site');
  let resolve = path.resolve.bind(path, baseDir);

  if (!exists) {
    console.log('Create: create directory _site');
    yield fs.makeTree('_site');

    console.log('Copy: copy bower.json, components etc.');
    yield Promise.all([
      fs.copy(resolve('site/bower.json'), '_site/bower.json'),
      fs.copyTree(resolve('site/components'), '_site/components'),
      fs.copyTree(resolve('site/scripts'), '_site/scripts'),
      fs.copyTree(resolve('site/styles'), '_site/styles')
    ]);

    console.log('Install: Install the bower dependencies');
    yield new Promise((resolve, reject) => {
      bower.commands
        .install(undefined, undefined, {cwd: '_site'})
        .on('end', resolve)
        .on('error', reject);
    });

    console.log('Vulcanize: Install the bower dependencies');
    yield vulcanCrisp();

    console.log('Remove: Remove bower dependencies');
    yield removeBowerComponents();
  }

  console.log('Copy: Copy favicon.ico, assets etc.');
  yield Promise.all([
    fs.copy(resolve('site/favicon.ico'), '_site/favicon.ico'),
    fs.copyTree(resolve('site/assets'), '_site/assets')
  ]);

  let config = yield cfg.getConfig();
  yield installElements(config);

  console.log('Ids: Get travis ids of elements if present');
  yield getElementIds(config);

  console.log('Property: Generate the property.json if absent');
  yield generateElementProperties(config);


  let fullConfig = yield cfg.getFullConfig();
  console.log('Pages: Create the site pages');
  yield build(fullConfig);
});
