#!/usr/bin/env node

let fs = require('q-io/fs');
let path = require('path');
let Q = require('q');
Q.longStackSupport = true;
let bower = require('bower');

let generateElementProperties = require('../browser/generate-property');
let installElements = require('../browser/install-elements');
let getElementIds = require('../browser/get-element-ids');
let vulcanCrisp = require('../browser/vulcan-crisp');
let build = require('../browser/build');
let cfg = require('../browser/config');
let baseDir = path.dirname(__dirname);
baseDir = path.join(baseDir, 'browser');

Q.spawn(function* () {
  yield fs.makeTree('_site');
  yield fs.copy(path.resolve(baseDir, 'site/bower.json'), '_site/bower.json');

  process.chdir('_site');
  yield new Promise((resolve, reject) => {
    bower.commands
      .install()
      .on('end', resolve)
      .on('error', reject);
  });
  process.chdir('../');

  yield Promise.all([
    fs.copy(path.resolve(baseDir, 'site/favicon.ico'), '_site/favicon.ico'),
    fs.copyTree(path.resolve(baseDir, 'site/components'), '_site/components'),
    fs.copyTree(path.resolve(baseDir, 'site/assets'), '_site/assets'),
    fs.copyTree(path.resolve(baseDir, 'site/scripts'), '_site/scripts'),
    fs.copyTree(path.resolve(baseDir, 'site/styles'), '_site/styles')
  ]);

  let config = yield cfg.getConfig();
  yield installElements(config);
  yield getElementIds(config);
  yield generateElementProperties(config);

  let fullConfig = yield cfg.getFullConfig();
  yield build(fullConfig);
  yield vulcanCrisp(fullConfig);
});
